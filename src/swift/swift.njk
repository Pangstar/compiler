import Foundation

<% macro keyword(declaration) -%>
    <%- if declaration.constant -%>
        let
    <%- else -%>
        var
    <%- endif -%>
<%- endmacro -%>

<% macro signature(type, optional=true) -%>
    <%- if type|kind == 'AnyType' -%>
        Any
    <%- elif type|kind == 'StringType' -%>
        String
    <%- elif type|kind == 'NumberType' -%>
        Double
    <%- elif type|kind == 'BooleanType' -%>
        Bool
    <%- elif type|kind == 'ArrayType' -%>
        [<$ signature(type.typeArguments[0]) $>]
    <%- endif %>
    <%- if optional and type.optional -%>
        ?
    <%- endif -%>    
<%- endmacro -%>

<% block header %><% endblock -%>

<% for declaration in file.declarations %>
    <%- if declaration|kind == 'VariableDeclaration' -%>
        public <$ keyword(declaration) $> <$ declaration.name $> :<$ signature(declaration.type) $> <% block variable %><% endblock %>
    <% elif declaration.constant -%>
    <%- endif %>
<% endfor -%>

<% block footer %><% endblock %>
